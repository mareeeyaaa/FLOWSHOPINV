<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="InventoryPanelFLP.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>